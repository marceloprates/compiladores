   0  $accept : S $end

   1  S : program

   2  program : program item
   3          |

   4  identifier : TK_IDENTIFIER

   5  item : global_dec ';'
   6       | fun_def

   7  global_dec : local_dec
   8             | type identifier '[' LIT_INTEGER ']' array_init

   9  scalar_init : ':' literal

  10  array_init : ':' literal_list
  11             |

  12  local_dec : type identifier scalar_init
  13            | type '$' identifier scalar_init

  14  type : KW_WORD
  15       | KW_BOOL
  16       | KW_BYTE

  17  literal : LIT_INTEGER
  18          | LIT_FALSE
  19          | LIT_TRUE
  20          | LIT_CHAR

  21  literal_list : literal_list literal
  22               |

  23  fun_def : header local_type_decs block

  24  local_type_decs : local_type_decs local_dec ';'
  25                  |

  26  header : type identifier '(' parameter_list ')'

  27  variable : identifier
  28           | identifier '[' expr ']'

  29  parameter_list : nonempty_parameter_list
  30                 |

  31  nonempty_parameter_list : nonempty_parameter_list ',' type identifier
  32                          | type identifier

  33  argument_list : nonempty_argument_list
  34                |

  35  nonempty_argument_list : nonempty_argument_list ',' expr
  36                         | expr

  37  block : '{' command_list '}'

  38  command_list : command_list command ';'
  39               |

  40  command : atr
  41          | flow_control
  42          | input
  43          | output
  44          | return
  45          | block
  46          |

  47  atr : variable '=' expr

  48  flow_control : KW_IF '(' expr ')' KW_THEN command
  49               | KW_IF '(' expr ')' KW_THEN command KW_ELSE command
  50               | KW_LOOP '(' expr ')' command

  51  input : KW_INPUT identifier

  52  output : KW_OUTPUT element_list

  53  element : LIT_STRING
  54          | expr

  55  element_list : nonempty_element_list
  56               |

  57  nonempty_element_list : nonempty_element_list ',' element
  58                        | element

  59  return : KW_RETURN expr

  60  expr : variable
  61       | identifier '(' argument_list ')'
  62       | literal
  63       | '(' expr ')'
  64       | expr '+' expr
  65       | expr '-' expr
  66       | expr '*' expr
  67       | expr '/' expr
  68       | expr '<' expr
  69       | expr '>' expr
  70       | expr OPERATOR_LE expr
  71       | expr OPERATOR_GE expr
  72       | expr OPERATOR_EQ expr
  73       | expr OPERATOR_NE expr
  74       | expr OPERATOR_AND expr
  75       | expr OPERATOR_OR expr
  76       | '&' expr
  77       | '*' expr

state 0
	$accept : . S $end  (0)
	program : .  (3)

	.  reduce 3

	S  goto 1
	program  goto 2


state 1
	$accept : S . $end  (0)

	$end  accept


state 2
	S : program .  (1)
	program : program . item  (2)

	KW_WORD  shift 3
	KW_BOOL  shift 4
	KW_BYTE  shift 5
	$end  reduce 1

	item  goto 6
	global_dec  goto 7
	local_dec  goto 8
	type  goto 9
	fun_def  goto 10
	header  goto 11


state 3
	type : KW_WORD .  (14)

	.  reduce 14


state 4
	type : KW_BOOL .  (15)

	.  reduce 15


state 5
	type : KW_BYTE .  (16)

	.  reduce 16


state 6
	program : program item .  (2)

	.  reduce 2


state 7
	item : global_dec . ';'  (5)

	';'  shift 12
	.  error


state 8
	global_dec : local_dec .  (7)

	.  reduce 7


state 9
	global_dec : type . identifier '[' LIT_INTEGER ']' array_init  (8)
	local_dec : type . identifier scalar_init  (12)
	local_dec : type . '$' identifier scalar_init  (13)
	header : type . identifier '(' parameter_list ')'  (26)

	TK_IDENTIFIER  shift 13
	'$'  shift 14
	.  error

	identifier  goto 15


state 10
	item : fun_def .  (6)

	.  reduce 6


state 11
	fun_def : header . local_type_decs block  (23)
	local_type_decs : .  (25)

	.  reduce 25

	local_type_decs  goto 16


state 12
	item : global_dec ';' .  (5)

	.  reduce 5


state 13
	identifier : TK_IDENTIFIER .  (4)

	.  reduce 4


state 14
	local_dec : type '$' . identifier scalar_init  (13)

	TK_IDENTIFIER  shift 13
	.  error

	identifier  goto 17


state 15
	global_dec : type identifier . '[' LIT_INTEGER ']' array_init  (8)
	local_dec : type identifier . scalar_init  (12)
	header : type identifier . '(' parameter_list ')'  (26)

	'['  shift 18
	':'  shift 19
	'('  shift 20
	.  error

	scalar_init  goto 21


state 16
	fun_def : header local_type_decs . block  (23)
	local_type_decs : local_type_decs . local_dec ';'  (24)

	KW_WORD  shift 3
	KW_BOOL  shift 4
	KW_BYTE  shift 5
	'{'  shift 22
	.  error

	local_dec  goto 23
	type  goto 24
	block  goto 25


state 17
	local_dec : type '$' identifier . scalar_init  (13)

	':'  shift 19
	.  error

	scalar_init  goto 26


state 18
	global_dec : type identifier '[' . LIT_INTEGER ']' array_init  (8)

	LIT_INTEGER  shift 27
	.  error


state 19
	scalar_init : ':' . literal  (9)

	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	.  error

	literal  goto 32


state 20
	header : type identifier '(' . parameter_list ')'  (26)
	parameter_list : .  (30)

	KW_WORD  shift 3
	KW_BOOL  shift 4
	KW_BYTE  shift 5
	')'  reduce 30

	type  goto 33
	parameter_list  goto 34
	nonempty_parameter_list  goto 35


state 21
	local_dec : type identifier scalar_init .  (12)

	.  reduce 12


state 22
	block : '{' . command_list '}'  (37)
	command_list : .  (39)

	.  reduce 39

	command_list  goto 36


state 23
	local_type_decs : local_type_decs local_dec . ';'  (24)

	';'  shift 37
	.  error


state 24
	local_dec : type . identifier scalar_init  (12)
	local_dec : type . '$' identifier scalar_init  (13)

	TK_IDENTIFIER  shift 13
	'$'  shift 14
	.  error

	identifier  goto 38


state 25
	fun_def : header local_type_decs block .  (23)

	.  reduce 23


state 26
	local_dec : type '$' identifier scalar_init .  (13)

	.  reduce 13


state 27
	global_dec : type identifier '[' LIT_INTEGER . ']' array_init  (8)

	']'  shift 39
	.  error


state 28
	literal : LIT_INTEGER .  (17)

	.  reduce 17


state 29
	literal : LIT_FALSE .  (18)

	.  reduce 18


state 30
	literal : LIT_TRUE .  (19)

	.  reduce 19


state 31
	literal : LIT_CHAR .  (20)

	.  reduce 20


state 32
	scalar_init : ':' literal .  (9)

	.  reduce 9


state 33
	nonempty_parameter_list : type . identifier  (32)

	TK_IDENTIFIER  shift 13
	.  error

	identifier  goto 40


state 34
	header : type identifier '(' parameter_list . ')'  (26)

	')'  shift 41
	.  error


state 35
	parameter_list : nonempty_parameter_list .  (29)
	nonempty_parameter_list : nonempty_parameter_list . ',' type identifier  (31)

	','  shift 42
	')'  reduce 29


state 36
	block : '{' command_list . '}'  (37)
	command_list : command_list . command ';'  (38)
	command : .  (46)

	KW_IF  shift 43
	KW_LOOP  shift 44
	KW_INPUT  shift 45
	KW_RETURN  shift 46
	KW_OUTPUT  shift 47
	TK_IDENTIFIER  shift 13
	'{'  shift 22
	'}'  shift 48
	';'  reduce 46

	identifier  goto 49
	variable  goto 50
	block  goto 51
	command  goto 52
	atr  goto 53
	flow_control  goto 54
	input  goto 55
	output  goto 56
	return  goto 57


state 37
	local_type_decs : local_type_decs local_dec ';' .  (24)

	.  reduce 24


state 38
	local_dec : type identifier . scalar_init  (12)

	':'  shift 19
	.  error

	scalar_init  goto 21


state 39
	global_dec : type identifier '[' LIT_INTEGER ']' . array_init  (8)
	array_init : .  (11)

	':'  shift 58
	';'  reduce 11

	array_init  goto 59


state 40
	nonempty_parameter_list : type identifier .  (32)

	.  reduce 32


state 41
	header : type identifier '(' parameter_list ')' .  (26)

	.  reduce 26


state 42
	nonempty_parameter_list : nonempty_parameter_list ',' . type identifier  (31)

	KW_WORD  shift 3
	KW_BOOL  shift 4
	KW_BYTE  shift 5
	.  error

	type  goto 60


state 43
	flow_control : KW_IF . '(' expr ')' KW_THEN command  (48)
	flow_control : KW_IF . '(' expr ')' KW_THEN command KW_ELSE command  (49)

	'('  shift 61
	.  error


state 44
	flow_control : KW_LOOP . '(' expr ')' command  (50)

	'('  shift 62
	.  error


state 45
	input : KW_INPUT . identifier  (51)

	TK_IDENTIFIER  shift 13
	.  error

	identifier  goto 63


state 46
	return : KW_RETURN . expr  (59)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 70


state 47
	output : KW_OUTPUT . element_list  (52)
	element_list : .  (56)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	LIT_STRING  shift 71
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	KW_ELSE  reduce 56
	';'  reduce 56

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	element  goto 72
	element_list  goto 73
	nonempty_element_list  goto 74
	expr  goto 75


state 48
	block : '{' command_list '}' .  (37)

	.  reduce 37


state 49
	variable : identifier .  (27)
	variable : identifier . '[' expr ']'  (28)

	'['  shift 76
	'='  reduce 27


state 50
	atr : variable . '=' expr  (47)

	'='  shift 77
	.  error


state 51
	command : block .  (45)

	.  reduce 45


state 52
	command_list : command_list command . ';'  (38)

	';'  shift 78
	.  error


state 53
	command : atr .  (40)

	.  reduce 40


state 54
	command : flow_control .  (41)

	.  reduce 41


state 55
	command : input .  (42)

	.  reduce 42


state 56
	command : output .  (43)

	.  reduce 43


state 57
	command : return .  (44)

	.  reduce 44


state 58
	array_init : ':' . literal_list  (10)
	literal_list : .  (22)

	.  reduce 22

	literal_list  goto 79


state 59
	global_dec : type identifier '[' LIT_INTEGER ']' array_init .  (8)

	.  reduce 8


state 60
	nonempty_parameter_list : nonempty_parameter_list ',' type . identifier  (31)

	TK_IDENTIFIER  shift 13
	.  error

	identifier  goto 80


state 61
	flow_control : KW_IF '(' . expr ')' KW_THEN command  (48)
	flow_control : KW_IF '(' . expr ')' KW_THEN command KW_ELSE command  (49)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 81


state 62
	flow_control : KW_LOOP '(' . expr ')' command  (50)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 82


state 63
	input : KW_INPUT identifier .  (51)

	.  reduce 51


state 64
	expr : '*' . expr  (77)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 83


state 65
	expr : '(' . expr ')'  (63)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 84


state 66
	expr : '&' . expr  (76)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 85


state 67
	variable : identifier .  (27)
	variable : identifier . '[' expr ']'  (28)
	expr : identifier . '(' argument_list ')'  (61)

	'['  shift 76
	'('  shift 86
	KW_ELSE  reduce 27
	OPERATOR_LE  reduce 27
	OPERATOR_GE  reduce 27
	OPERATOR_EQ  reduce 27
	OPERATOR_NE  reduce 27
	OPERATOR_AND  reduce 27
	OPERATOR_OR  reduce 27
	'<'  reduce 27
	'>'  reduce 27
	'+'  reduce 27
	'-'  reduce 27
	'*'  reduce 27
	'/'  reduce 27
	';'  reduce 27
	']'  reduce 27
	')'  reduce 27
	','  reduce 27


state 68
	expr : literal .  (62)

	.  reduce 62


state 69
	expr : variable .  (60)

	.  reduce 60


state 70
	return : KW_RETURN expr .  (59)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 59
	';'  reduce 59


state 71
	element : LIT_STRING .  (53)

	.  reduce 53


state 72
	nonempty_element_list : element .  (58)

	.  reduce 58


state 73
	output : KW_OUTPUT element_list .  (52)

	.  reduce 52


state 74
	element_list : nonempty_element_list .  (55)
	nonempty_element_list : nonempty_element_list . ',' element  (57)

	','  shift 99
	KW_ELSE  reduce 55
	';'  reduce 55


state 75
	element : expr .  (54)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 54
	';'  reduce 54
	','  reduce 54


state 76
	variable : identifier '[' . expr ']'  (28)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 100


state 77
	atr : variable '=' . expr  (47)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 101


state 78
	command_list : command_list command ';' .  (38)

	.  reduce 38


state 79
	array_init : ':' literal_list .  (10)
	literal_list : literal_list . literal  (21)

	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	';'  reduce 10

	literal  goto 102


state 80
	nonempty_parameter_list : nonempty_parameter_list ',' type identifier .  (31)

	.  reduce 31


state 81
	flow_control : KW_IF '(' expr . ')' KW_THEN command  (48)
	flow_control : KW_IF '(' expr . ')' KW_THEN command KW_ELSE command  (49)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	')'  shift 103
	.  error


state 82
	flow_control : KW_LOOP '(' expr . ')' command  (50)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	')'  shift 104
	.  error


state 83
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)
	expr : '*' expr .  (77)

	.  reduce 77


state 84
	expr : '(' expr . ')'  (63)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	')'  shift 105
	.  error


state 85
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)
	expr : '&' expr .  (76)

	.  reduce 76


state 86
	expr : identifier '(' . argument_list ')'  (61)
	argument_list : .  (34)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	')'  reduce 34

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	argument_list  goto 106
	nonempty_argument_list  goto 107
	expr  goto 108


state 87
	expr : expr OPERATOR_LE . expr  (70)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 109


state 88
	expr : expr OPERATOR_GE . expr  (71)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 110


state 89
	expr : expr OPERATOR_EQ . expr  (72)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 111


state 90
	expr : expr OPERATOR_NE . expr  (73)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 112


state 91
	expr : expr OPERATOR_AND . expr  (74)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 113


state 92
	expr : expr OPERATOR_OR . expr  (75)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 114


state 93
	expr : expr '<' . expr  (68)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 115


state 94
	expr : expr '>' . expr  (69)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 116


state 95
	expr : expr '+' . expr  (64)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 117


state 96
	expr : expr '-' . expr  (65)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 118


state 97
	expr : expr '*' . expr  (66)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 119


state 98
	expr : expr '/' . expr  (67)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 120


state 99
	nonempty_element_list : nonempty_element_list ',' . element  (57)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	LIT_STRING  shift 71
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	element  goto 121
	expr  goto 75


state 100
	variable : identifier '[' expr . ']'  (28)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	']'  shift 122
	.  error


state 101
	atr : variable '=' expr .  (47)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 47
	';'  reduce 47


state 102
	literal_list : literal_list literal .  (21)

	.  reduce 21


state 103
	flow_control : KW_IF '(' expr ')' . KW_THEN command  (48)
	flow_control : KW_IF '(' expr ')' . KW_THEN command KW_ELSE command  (49)

	KW_THEN  shift 123
	.  error


state 104
	flow_control : KW_LOOP '(' expr ')' . command  (50)
	command : .  (46)

	KW_IF  shift 43
	KW_LOOP  shift 44
	KW_INPUT  shift 45
	KW_RETURN  shift 46
	KW_OUTPUT  shift 47
	TK_IDENTIFIER  shift 13
	'{'  shift 22
	KW_ELSE  reduce 46
	';'  reduce 46

	identifier  goto 49
	variable  goto 50
	block  goto 51
	command  goto 124
	atr  goto 53
	flow_control  goto 54
	input  goto 55
	output  goto 56
	return  goto 57


state 105
	expr : '(' expr ')' .  (63)

	.  reduce 63


state 106
	expr : identifier '(' argument_list . ')'  (61)

	')'  shift 125
	.  error


state 107
	argument_list : nonempty_argument_list .  (33)
	nonempty_argument_list : nonempty_argument_list . ',' expr  (35)

	','  shift 126
	')'  reduce 33


state 108
	nonempty_argument_list : expr .  (36)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	')'  reduce 36
	','  reduce 36


state 109
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr OPERATOR_LE expr .  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 70
	OPERATOR_LE  reduce 70
	OPERATOR_GE  reduce 70
	OPERATOR_EQ  reduce 70
	OPERATOR_NE  reduce 70
	OPERATOR_AND  reduce 70
	OPERATOR_OR  reduce 70
	'<'  reduce 70
	'>'  reduce 70
	';'  reduce 70
	']'  reduce 70
	')'  reduce 70
	','  reduce 70


state 110
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr OPERATOR_GE expr .  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 71
	OPERATOR_LE  reduce 71
	OPERATOR_GE  reduce 71
	OPERATOR_EQ  reduce 71
	OPERATOR_NE  reduce 71
	OPERATOR_AND  reduce 71
	OPERATOR_OR  reduce 71
	'<'  reduce 71
	'>'  reduce 71
	';'  reduce 71
	']'  reduce 71
	')'  reduce 71
	','  reduce 71


state 111
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr OPERATOR_EQ expr .  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 72
	OPERATOR_LE  reduce 72
	OPERATOR_GE  reduce 72
	OPERATOR_EQ  reduce 72
	OPERATOR_NE  reduce 72
	OPERATOR_AND  reduce 72
	OPERATOR_OR  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	';'  reduce 72
	']'  reduce 72
	')'  reduce 72
	','  reduce 72


state 112
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr OPERATOR_NE expr .  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 73
	OPERATOR_LE  reduce 73
	OPERATOR_GE  reduce 73
	OPERATOR_EQ  reduce 73
	OPERATOR_NE  reduce 73
	OPERATOR_AND  reduce 73
	OPERATOR_OR  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	';'  reduce 73
	']'  reduce 73
	')'  reduce 73
	','  reduce 73


state 113
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr OPERATOR_AND expr .  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 74
	OPERATOR_AND  reduce 74
	OPERATOR_OR  reduce 74
	';'  reduce 74
	']'  reduce 74
	')'  reduce 74
	','  reduce 74


state 114
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)
	expr : expr OPERATOR_OR expr .  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 75
	OPERATOR_AND  reduce 75
	OPERATOR_OR  reduce 75
	';'  reduce 75
	']'  reduce 75
	')'  reduce 75
	','  reduce 75


state 115
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr '<' expr .  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 68
	OPERATOR_LE  reduce 68
	OPERATOR_GE  reduce 68
	OPERATOR_EQ  reduce 68
	OPERATOR_NE  reduce 68
	OPERATOR_AND  reduce 68
	OPERATOR_OR  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	';'  reduce 68
	']'  reduce 68
	')'  reduce 68
	','  reduce 68


state 116
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr '>' expr .  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 69
	OPERATOR_LE  reduce 69
	OPERATOR_GE  reduce 69
	OPERATOR_EQ  reduce 69
	OPERATOR_NE  reduce 69
	OPERATOR_AND  reduce 69
	OPERATOR_OR  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	';'  reduce 69
	']'  reduce 69
	')'  reduce 69
	','  reduce 69


state 117
	expr : expr . '+' expr  (64)
	expr : expr '+' expr .  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 64
	OPERATOR_LE  reduce 64
	OPERATOR_GE  reduce 64
	OPERATOR_EQ  reduce 64
	OPERATOR_NE  reduce 64
	OPERATOR_AND  reduce 64
	OPERATOR_OR  reduce 64
	'<'  reduce 64
	'>'  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	';'  reduce 64
	']'  reduce 64
	')'  reduce 64
	','  reduce 64


state 118
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr '-' expr .  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	'*'  shift 97
	'/'  shift 98
	KW_ELSE  reduce 65
	OPERATOR_LE  reduce 65
	OPERATOR_GE  reduce 65
	OPERATOR_EQ  reduce 65
	OPERATOR_NE  reduce 65
	OPERATOR_AND  reduce 65
	OPERATOR_OR  reduce 65
	'<'  reduce 65
	'>'  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	';'  reduce 65
	']'  reduce 65
	')'  reduce 65
	','  reduce 65


state 119
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr '*' expr .  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	.  reduce 66


state 120
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr '/' expr .  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	.  reduce 67


state 121
	nonempty_element_list : nonempty_element_list ',' element .  (57)

	.  reduce 57


state 122
	variable : identifier '[' expr ']' .  (28)

	.  reduce 28


state 123
	flow_control : KW_IF '(' expr ')' KW_THEN . command  (48)
	flow_control : KW_IF '(' expr ')' KW_THEN . command KW_ELSE command  (49)
	command : .  (46)

	KW_IF  shift 43
	KW_LOOP  shift 44
	KW_INPUT  shift 45
	KW_RETURN  shift 46
	KW_OUTPUT  shift 47
	TK_IDENTIFIER  shift 13
	'{'  shift 22
	KW_ELSE  reduce 46
	';'  reduce 46

	identifier  goto 49
	variable  goto 50
	block  goto 51
	command  goto 127
	atr  goto 53
	flow_control  goto 54
	input  goto 55
	output  goto 56
	return  goto 57


state 124
	flow_control : KW_LOOP '(' expr ')' command .  (50)

	.  reduce 50


state 125
	expr : identifier '(' argument_list ')' .  (61)

	.  reduce 61


state 126
	nonempty_argument_list : nonempty_argument_list ',' . expr  (35)

	TK_IDENTIFIER  shift 13
	LIT_INTEGER  shift 28
	LIT_FALSE  shift 29
	LIT_TRUE  shift 30
	LIT_CHAR  shift 31
	'*'  shift 64
	'('  shift 65
	'&'  shift 66
	.  error

	identifier  goto 67
	literal  goto 68
	variable  goto 69
	expr  goto 128


state 127
	flow_control : KW_IF '(' expr ')' KW_THEN command .  (48)
	flow_control : KW_IF '(' expr ')' KW_THEN command . KW_ELSE command  (49)

	KW_ELSE  shift 129
	';'  reduce 48


state 128
	nonempty_argument_list : nonempty_argument_list ',' expr .  (35)
	expr : expr . '+' expr  (64)
	expr : expr . '-' expr  (65)
	expr : expr . '*' expr  (66)
	expr : expr . '/' expr  (67)
	expr : expr . '<' expr  (68)
	expr : expr . '>' expr  (69)
	expr : expr . OPERATOR_LE expr  (70)
	expr : expr . OPERATOR_GE expr  (71)
	expr : expr . OPERATOR_EQ expr  (72)
	expr : expr . OPERATOR_NE expr  (73)
	expr : expr . OPERATOR_AND expr  (74)
	expr : expr . OPERATOR_OR expr  (75)

	OPERATOR_LE  shift 87
	OPERATOR_GE  shift 88
	OPERATOR_EQ  shift 89
	OPERATOR_NE  shift 90
	OPERATOR_AND  shift 91
	OPERATOR_OR  shift 92
	'<'  shift 93
	'>'  shift 94
	'+'  shift 95
	'-'  shift 96
	'*'  shift 97
	'/'  shift 98
	')'  reduce 35
	','  reduce 35


state 129
	flow_control : KW_IF '(' expr ')' KW_THEN command KW_ELSE . command  (49)
	command : .  (46)

	KW_IF  shift 43
	KW_LOOP  shift 44
	KW_INPUT  shift 45
	KW_RETURN  shift 46
	KW_OUTPUT  shift 47
	TK_IDENTIFIER  shift 13
	'{'  shift 22
	KW_ELSE  reduce 46
	';'  reduce 46

	identifier  goto 49
	variable  goto 50
	block  goto 51
	command  goto 130
	atr  goto 53
	flow_control  goto 54
	input  goto 55
	output  goto 56
	return  goto 57


state 130
	flow_control : KW_IF '(' expr ')' KW_THEN command KW_ELSE command .  (49)

	.  reduce 49


44 terminals, 32 nonterminals
78 grammar rules, 131 states
